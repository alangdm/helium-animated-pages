{
  "version": "experimental",
  "tags": [
    {
      "name": "helium-animated-pages",
      "description": "A light spiritual succesor to neon-animated-pages using only css animations",
      "attributes": [
        {
          "name": "animationClasses",
          "description": "This property is required for the animations to run, it maps which\r\nanimations to run depending on what the transition will be.\r\n\r\nIf it's not set the transitions will run without animations.\r\n\r\nThe properties of this object each represent a different transition\r\nrule, the transition rules can be of one of the following types (in\r\norder of priority, all the examples asume you have at least two pages\r\nwhich identify respectively as `page1` and `page2`):\r\n- `from_to`: The most specific kind of transition.\r\n   It defines an animation which will run when both the newly selected\r\n   page and the previously selected page match with the rule. For\r\n   example: `page1_page2`.\r\n- `_to ` is a special subtype of this rule when there was no\r\n   previously selected page. For example: `_page1`\r\n- `*_to`: It defines an animation which will run when only the newly\r\n   selected page matches this rule. For example: `*_page2`\r\n- `from_*`: It defines an animation which will run when only the\r\n   previously selected page matches this rule. For example: `page1_*`\r\n- `default`: It defines an animation which will run when none of the\r\n   other rules apply.\r\n\r\nPlease bear in mind 'undefined' and 'null' are not valid identifiers.\r\n\r\nAny transition rule should be an object with this format:\r\n```javascript\r\n{\r\n   in: 'inbound_css_animation_class_name',\r\n   out: 'outbound_css_animation_class_name'\r\n}\r\n```",
          "type": "Object.<string, {in: string, out: string}>"
        },
        {
          "name": "selected",
          "description": "The index or value of the attribute of the currently\r\nselected node, it's only the index if `attrForSelected` isn't defined.\r\nModifying this property achieves the same results as invoking\r\nthe `select(next)` method.\r\nJust be warned, if you use this property with a downwards only binding and\r\nalso try to use any of the selection methods you might get state\r\ninconsistencies.",
          "type": "string|number"
        },
        {
          "name": "attrForSelected",
          "description": "If set, it will be the name of the attribute used to identify\r\ndifferent pages added inside the instance of `helium-animated-pages`\r\n(otherwise a the index of the children page will be used). Any page\r\nwithout this attribute will be ignored and if two pages are found with\r\nthe same value for the attribute only the first one will be selectable.",
          "type": "string",
          "default": "\"name\""
        }
      ],
      "properties": [
        {
          "name": "animationClasses",
          "attribute": "animationClasses",
          "description": "This property is required for the animations to run, it maps which\r\nanimations to run depending on what the transition will be.\r\n\r\nIf it's not set the transitions will run without animations.\r\n\r\nThe properties of this object each represent a different transition\r\nrule, the transition rules can be of one of the following types (in\r\norder of priority, all the examples asume you have at least two pages\r\nwhich identify respectively as `page1` and `page2`):\r\n- `from_to`: The most specific kind of transition.\r\n   It defines an animation which will run when both the newly selected\r\n   page and the previously selected page match with the rule. For\r\n   example: `page1_page2`.\r\n- `_to ` is a special subtype of this rule when there was no\r\n   previously selected page. For example: `_page1`\r\n- `*_to`: It defines an animation which will run when only the newly\r\n   selected page matches this rule. For example: `*_page2`\r\n- `from_*`: It defines an animation which will run when only the\r\n   previously selected page matches this rule. For example: `page1_*`\r\n- `default`: It defines an animation which will run when none of the\r\n   other rules apply.\r\n\r\nPlease bear in mind 'undefined' and 'null' are not valid identifiers.\r\n\r\nAny transition rule should be an object with this format:\r\n```javascript\r\n{\r\n   in: 'inbound_css_animation_class_name',\r\n   out: 'outbound_css_animation_class_name'\r\n}\r\n```",
          "type": "Object.<string, {in: string, out: string}>"
        },
        {
          "name": "isAnimating",
          "description": "This property will get the state of the animation, whether it's currently in the middle of an animation or not.",
          "type": "Boolean"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "description": "The index or value of the attribute of the currently\r\nselected node, it's only the index if `attrForSelected` isn't defined.\r\nModifying this property achieves the same results as invoking\r\nthe `select(next)` method.\r\nJust be warned, if you use this property with a downwards only binding and\r\nalso try to use any of the selection methods you might get state\r\ninconsistencies.",
          "type": "string|number"
        },
        {
          "name": "selectedItem",
          "description": "The currently selected item's DOM node.",
          "type": "Element"
        },
        {
          "name": "attrForSelected",
          "attribute": "attrForSelected",
          "description": "If set, it will be the name of the attribute used to identify\r\ndifferent pages added inside the instance of `helium-animated-pages`\r\n(otherwise a the index of the children page will be used). Any page\r\nwithout this attribute will be ignored and if two pages are found with\r\nthe same value for the attribute only the first one will be selectable.",
          "type": "string",
          "default": "\"name\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "The slot for the pages to animate"
        }
      ],
      "cssProperties": [
        {
          "name": "--helium-children-visible",
          "description": "Whether this component should be visible if it's a children of another `helium-animated-pages`."
        }
      ]
    }
  ]
}